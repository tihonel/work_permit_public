drop table if exists role_assigment;
drop table if exists worker;
drop table if exists measure;
drop table if exists work_permit_technic;
drop table if exists technic;
drop table if exists instruction;
drop table if exists task;
drop table if exists work_permit_xls;
drop table if exists report_entry;
drop table if exists historical_price;
drop table if exists price;
drop table if exists work_permit;
drop table if exists users;
drop table if exists authority;

create table work_permit
(
    id           int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    number       varchar   NOT NULL,
    start_date   timestamp NOT NULL,
    end_date     timestamp NOT NULL,
    issuing_date timestamp NOT NULL,
    short_name   varchar   NOT NULL
);

create table task
(
    id             int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    work_permit_id int REFERENCES work_permit (id) ON DELETE CASCADE,
    string         varchar NOT NULL
);

create table instruction
(
    id             int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    work_permit_id int REFERENCES work_permit (id) ON DELETE CASCADE,
    string         varchar NOT NULL
);

create table worker
(
    id                 int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name               varchar NOT NULL,
    dative_name        varchar NOT NULL,
    access_group       int,
    operational_rights boolean,
    right_issuing      boolean,
    driver             boolean,
    type               varchar(2)
);

create table measure
(
    id             int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    work_permit_id int REFERENCES work_permit (id) ON DELETE CASCADE,
    first_column   varchar,
    second_column  varchar,
    third_column   varchar
);

create table role_assigment
(
    work_permit_id int REFERENCES work_permit (id) ON DELETE CASCADE,
    worker_id      int REFERENCES worker (id) ON DELETE CASCADE,
    role           varchar
);

create table technic
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
);

create table price
(
    id      int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    varchar,
    cost    int,
    deleted boolean
);

create table historical_price
(
    id         int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    price_id   int REFERENCES price (id),
    cost       int,
    start_date DATE,
    end_date   date
);

create table report_entry
(
    id                  int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    work_permit_id      int REFERENCES work_permit (id) ON DELETE SET NULL,
    historical_price_id int REFERENCES historical_price (id),
    quantity            int,
    date_of_work        DATE
);

create table work_permit_technic
(
    technic_id     int REFERENCES technic (id) ON DELETE CASCADE,
    work_permit_id int REFERENCES work_permit (id) ON DELETE CASCADE,
    PRIMARY KEY (technic_id, work_permit_id)
);

create table work_permit_xls
(
    work_permit_id int REFERENCES work_permit (id) ON DELETE CASCADE,
    file_name      varchar
);

create table users
(
    id       int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR UNIQUE NOT NULL,
    password VARCHAR        NOT NULL,
    enable   boolean        NOT NULL
);

create table authority
(
    id        int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username  VARCHAR NOT NULL,
    authority varchar NOT NULL
);
